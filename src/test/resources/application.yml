REDIS_HOST: ${REDIS_HOST_ENV:localhost}
REDIS_PORT: ${REDIS_PORT_ENV:6378}

spring:
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: ${SHOW_SQL_ENABLED:true}
    hibernate:
      ddl-auto: update

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      jedis:
        pool:
          max-active: 7
          max-idle: 7
          min-idle: 2
          max-wait: -1ms

  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: mb_group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    kafka-topics:
      test-topic: test_topic

swagger:
  documentation:
    services:
      - name: live-data-service
        url: /v2/api-docs
        version: 2.0
      - name: live-data-service-2
        url: /v2/api-docs
        version: 2.0

redisson:
  enabled: false
  url: redis://${REDIS_HOST}:${REDIS_PORT}

services:
  token:
    store: redis

clients:
  # https://developer.android.com/google/play/integrity/overview
  play-integrity-api:
    credentials-file: ${PLAY_INTEGRITY_API_CREDENTIALS_JSON:play-integrity-credentials.json}
    application-name: project_id # project_id in play-integrity-credentials.json file

  json-placeholder:
    url: ${JSON_PLACEHOLDER_BASE_URL:https://jsonplaceholder.typicode.com}
    # client-id and client-secret are dummy values for this integration and were added to demonstrate the usage of BasicAuthenticationInterceptor
    client-id: ${JSON_PLACEHOLDER_CLIENT_ID:client-id}
    client-secret: ${JSON_PLACEHOLDER_CLIENT_SECRET:client-secret}